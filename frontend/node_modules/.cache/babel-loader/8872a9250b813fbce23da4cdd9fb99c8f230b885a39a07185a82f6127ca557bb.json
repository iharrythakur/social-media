{"ast":null,"code":"import axios from 'axios';\nimport { storage } from '../config/firebase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: data => api.post('/api/auth/register', data),\n  login: data => api.post('/api/auth/login', data),\n  verifyToken: data => api.post('/api/auth/verify', data),\n  getProfile: () => api.get('/api/auth/profile')\n};\n\n// User API calls\nexport const userAPI = {\n  getUser: userId => api.get(`/api/users/${userId}`),\n  updateUser: (userId, data) => api.put(`/api/users/${userId}`, data),\n  getCurrentUser: () => api.get('/api/users/me'),\n  updateCurrentUser: data => api.put('/api/users/me', data)\n};\n\n// Posts API calls\nexport const postsAPI = {\n  getPosts: (page = 1, limit = 20) => api.get(`/api/posts?page=${page}&limit=${limit}`),\n  createPost: data => api.post('/api/posts', data),\n  getPost: postId => api.get(`/api/posts/${postId}`),\n  likePost: postId => api.put(`/api/posts/${postId}/like`),\n  getUserPosts: (userId, page = 1, limit = 20) => api.get(`/api/posts/user/${userId}?page=${page}&limit=${limit}`)\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/api/health')\n};\n\n// Storage API calls\nexport const storageAPI = {\n  uploadProfilePicture: async (file, userId) => {\n    if (!file || !userId) {\n      throw new Error('File and user ID are required for upload.');\n    }\n    const filePath = `profile_pictures/${userId}/${file.name}`;\n    const storageRef = ref(storage, filePath);\n\n    // Upload file\n    await uploadBytes(storageRef, file);\n\n    // Get download URL\n    const downloadURL = await getDownloadURL(storageRef);\n    return downloadURL;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","storage","ref","uploadBytes","getDownloadURL","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","data","post","login","verifyToken","getProfile","get","userAPI","getUser","userId","updateUser","put","getCurrentUser","updateCurrentUser","postsAPI","getPosts","page","limit","createPost","getPost","postId","likePost","getUserPosts","healthAPI","check","storageAPI","uploadProfilePicture","file","Error","filePath","name","storageRef","downloadURL"],"sources":["/Users/harshdeepsingh/Desktop/The Future University- SDE Assignment __ Thapar University/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { storage } from '../config/firebase';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  register: (data) => api.post('/api/auth/register', data),\n  login: (data) => api.post('/api/auth/login', data),\n  verifyToken: (data) => api.post('/api/auth/verify', data),\n  getProfile: () => api.get('/api/auth/profile'),\n};\n\n// User API calls\nexport const userAPI = {\n  getUser: (userId) => api.get(`/api/users/${userId}`),\n  updateUser: (userId, data) => api.put(`/api/users/${userId}`, data),\n  getCurrentUser: () => api.get('/api/users/me'),\n  updateCurrentUser: (data) => api.put('/api/users/me', data),\n};\n\n// Posts API calls\nexport const postsAPI = {\n  getPosts: (page = 1, limit = 20) => \n    api.get(`/api/posts?page=${page}&limit=${limit}`),\n  createPost: (data) => api.post('/api/posts', data),\n  getPost: (postId) => api.get(`/api/posts/${postId}`),\n  likePost: (postId) => api.put(`/api/posts/${postId}/like`),\n  getUserPosts: (userId, page = 1, limit = 20) => \n    api.get(`/api/posts/user/${userId}?page=${page}&limit=${limit}`),\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/api/health'),\n};\n\n// Storage API calls\nexport const storageAPI = {\n  uploadProfilePicture: async (file, userId) => {\n    if (!file || !userId) {\n      throw new Error('File and user ID are required for upload.');\n    }\n    const filePath = `profile_pictures/${userId}/${file.name}`;\n    const storageRef = ref(storage, filePath);\n    \n    // Upload file\n    await uploadBytes(storageRef, file);\n    \n    // Get download URL\n    const downloadURL = await getDownloadURL(storageRef);\n    \n    return downloadURL;\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}